{"ast":null,"code":"import { razrediTypes } from './types';\nexport const ucitajSveRazrede = () => async dispatch => {\n  try {\n    dispatch({\n      type: razrediTypes.UCITAJ_RAZREDE_REQUEST\n    });\n    const response = await fetch('http://localhost:3001/odjeljenja');\n    const result = await response.json();\n    result.reverse();\n    dispatch({\n      type: razrediTypes.UCITAJ_RAZREDE_SUCCESS,\n      payload: result.odjeljenja\n    });\n  } catch (error) {\n    dispatch({\n      type: razrediTypes.UCITAJ_RAZREDE_ERROR,\n      error: error.message\n    });\n  }\n};\nexport const ucitajRazredeIzSkolskeGodine = idSkolskaGodina => async dispatch => {\n  try {\n    dispatch({\n      type: razrediTypes.UCITAJ_RAZREDE_REQUEST\n    });\n    const response = await fetch(`http://localhost:3001/odjeljenja/skolske-godine/${idSkolskaGodina}`);\n    const result = await response.json();\n    dispatch({\n      type: razrediTypes.UCITAJ_RAZREDE_SUCCESS,\n      payload: result.odjeljenja\n    });\n  } catch (error) {\n    dispatch({\n      type: razrediTypes.UCITAJ_RAZREDE_ERROR,\n      error: error.message\n    });\n  }\n}; //UCITAJ UCENIKOVE RAZREDE\n\nexport const ucitajUcenikoveRazrede = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: razrediTypes.UCITAJ_UCENIKOVE_RAZREDE_REQUEST\n      });\n      const response = await fetch(`http://localhost:3001/ucenici/${id}/razredi`);\n      const result = await response.json();\n      dispatch({\n        type: razrediTypes.UCITAJ_UCENIKOVE_RAZREDE_SUCCESS,\n        payload: result.ucenikovaOdjeljenja.reverse() || []\n      });\n    } catch (error) {\n      dispatch({\n        type: razrediTypes.UCITAJ_UCENIKOVE_RAZREDE_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const dodajRazred = razred => {\n  console.log(razred);\n  return async dispatch => {\n    try {\n      dispatch({\n        type: razrediTypes.DODAJ_RAZRED_REQUEST\n      });\n      const response = await fetch(`http://localhost:3001/odjeljenja`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idSkolskaGodina: `${razred.idSkolskaGodina}`,\n          oznakaOdjeljenja: `${razred.oznakaOdjeljenja}`,\n          razred: `${razred.razred}`,\n          idNastavnikRazrednik: `${razred.idNastavnikRazrednik}`\n        })\n      });\n      const result = await response.json();\n      dispatch({\n        type: razrediTypes.DODAJ_RAZRED_SUCCESS,\n        payload: result.razred\n      });\n    } catch (error) {\n      dispatch({\n        type: razrediTypes.DODAJ_RAZRED_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const urediRazred = razred => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: razrediTypes.UREDI_RAZRED_REQUEST\n      });\n      const response = await fetch(`http://localhost:3001/odjeljenja/${razred.idOdjeljenja}`, {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idSkolskaGodina: `${razred.idSkolskaGodina}`,\n          idNastavnikRazrednik: `${razred.idNastavnikRazrednik}`,\n          oznakaOdjeljenja: `${razred.oznakaOdjeljenja}`,\n          razred: `${razred.razred}`\n        })\n      });\n      const result = await response.json();\n      dispatch({\n        type: razrediTypes.UREDI_RAZRED_SUCCESS,\n        payload: result.data\n      });\n    } catch (error) {\n      dispatch({\n        type: razrediTypes.UREDI_RAZRED_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const obrisiRazred = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: razrediTypes.OBRISI_RAZRED_REQUEST\n      });\n      const response = await fetch(`http://localhost:3001/odjeljenja/${id}`, {\n        method: 'DELETE'\n      });\n      await response.json();\n      dispatch({\n        type: razrediTypes.OBRISI_RAZRED_SUCCESS,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: razrediTypes.OBRISI_RAZRED_ERROR,\n        error: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["razrediTypes","ucitajSveRazrede","dispatch","type","UCITAJ_RAZREDE_REQUEST","response","fetch","result","json","reverse","UCITAJ_RAZREDE_SUCCESS","payload","odjeljenja","error","UCITAJ_RAZREDE_ERROR","message","ucitajRazredeIzSkolskeGodine","idSkolskaGodina","ucitajUcenikoveRazrede","id","UCITAJ_UCENIKOVE_RAZREDE_REQUEST","UCITAJ_UCENIKOVE_RAZREDE_SUCCESS","ucenikovaOdjeljenja","UCITAJ_UCENIKOVE_RAZREDE_ERROR","dodajRazred","razred","console","log","DODAJ_RAZRED_REQUEST","method","headers","Accept","body","JSON","stringify","oznakaOdjeljenja","idNastavnikRazrednik","DODAJ_RAZRED_SUCCESS","DODAJ_RAZRED_ERROR","urediRazred","UREDI_RAZRED_REQUEST","idOdjeljenja","UREDI_RAZRED_SUCCESS","data","UREDI_RAZRED_ERROR","obrisiRazred","OBRISI_RAZRED_REQUEST","OBRISI_RAZRED_SUCCESS","OBRISI_RAZRED_ERROR"],"sources":["C:/Users/pc/Desktop/balkon-project/client/src/redux/odjeljenjaRazredi/actions.js"],"sourcesContent":["import { razrediTypes } from './types';\r\n\r\nexport const ucitajSveRazrede = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: razrediTypes.UCITAJ_RAZREDE_REQUEST });\r\n    const response = await fetch('http://localhost:3001/odjeljenja');\r\n    const result = await response.json();\r\n    result.reverse();\r\n    dispatch({\r\n      type: razrediTypes.UCITAJ_RAZREDE_SUCCESS,\r\n      payload: result.odjeljenja,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: razrediTypes.UCITAJ_RAZREDE_ERROR,\r\n      error: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const ucitajRazredeIzSkolskeGodine =\r\n  (idSkolskaGodina) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: razrediTypes.UCITAJ_RAZREDE_REQUEST });\r\n      const response = await fetch(\r\n        `http://localhost:3001/odjeljenja/skolske-godine/${idSkolskaGodina}`\r\n      );\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: razrediTypes.UCITAJ_RAZREDE_SUCCESS,\r\n        payload: result.odjeljenja,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: razrediTypes.UCITAJ_RAZREDE_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n//UCITAJ UCENIKOVE RAZREDE\r\n\r\nexport const ucitajUcenikoveRazrede = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: razrediTypes.UCITAJ_UCENIKOVE_RAZREDE_REQUEST });\r\n      const response = await fetch(\r\n        `http://localhost:3001/ucenici/${id}/razredi`\r\n      );\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: razrediTypes.UCITAJ_UCENIKOVE_RAZREDE_SUCCESS,\r\n        payload: result.ucenikovaOdjeljenja.reverse() || [],\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: razrediTypes.UCITAJ_UCENIKOVE_RAZREDE_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const dodajRazred = (razred) => {\r\n  console.log(razred);\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: razrediTypes.DODAJ_RAZRED_REQUEST });\r\n      const response = await fetch(`http://localhost:3001/odjeljenja`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          idSkolskaGodina: `${razred.idSkolskaGodina}`,\r\n          oznakaOdjeljenja: `${razred.oznakaOdjeljenja}`,\r\n          razred: `${razred.razred}`,\r\n          idNastavnikRazrednik: `${razred.idNastavnikRazrednik}`,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: razrediTypes.DODAJ_RAZRED_SUCCESS,\r\n        payload: result.razred,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: razrediTypes.DODAJ_RAZRED_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const urediRazred = (razred) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: razrediTypes.UREDI_RAZRED_REQUEST });\r\n      const response = await fetch(\r\n        `http://localhost:3001/odjeljenja/${razred.idOdjeljenja}`,\r\n        {\r\n          method: 'PUT',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            idSkolskaGodina: `${razred.idSkolskaGodina}`,\r\n            idNastavnikRazrednik: `${razred.idNastavnikRazrednik}`,\r\n            oznakaOdjeljenja: `${razred.oznakaOdjeljenja}`,\r\n            razred: `${razred.razred}`,\r\n          }),\r\n        }\r\n      );\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: razrediTypes.UREDI_RAZRED_SUCCESS,\r\n        payload: result.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: razrediTypes.UREDI_RAZRED_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const obrisiRazred = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: razrediTypes.OBRISI_RAZRED_REQUEST });\r\n      const response = await fetch(`http://localhost:3001/odjeljenja/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      await response.json();\r\n      dispatch({\r\n        type: razrediTypes.OBRISI_RAZRED_SUCCESS,\r\n        payload: id,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: razrediTypes.OBRISI_RAZRED_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}