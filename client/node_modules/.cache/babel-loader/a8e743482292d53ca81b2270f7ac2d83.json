{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\balkon-project\\\\client\\\\src\\\\components\\\\Tabs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createSearchParams, useNavigate, useParams, useSearchParams } from 'react-router-dom';\nimport { Tab, Tabs as TabsComponent, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { ucitajUcenika } from '../redux/ucenici/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction getParamFromUrl(paramName) {\n  let url = window.location.search;\n  const params = new URLSearchParams(url);\n  const paramValue = params.get(`${paramName}`);\n  return paramValue ? paramValue : '';\n}\n\nconst Tabs = _ref => {\n  _s();\n\n  let {\n    razredi = [],\n    predmeti = []\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    idUcenik\n  } = useParams();\n  const [ucenik] = useSelector(state => state.ucenici.items.filter(ucenik => ucenik.idUcenik === +idUcenik));\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [razredID, setRazredID] = useState(razredi[0].id_razred);\n  const [defaultUrl, setDefaultUrl] = useState(getParamFromUrl('idOdjeljenja') || `${razredID}`);\n  useEffect(() => {\n    navigate({\n      search: `?${createSearchParams(`idOdjeljenja=${defaultUrl}`)}`\n    });\n  }, []);\n\n  const goToPosts = params => navigate({\n    /* pathname: '/posts', */\n    search: `?${createSearchParams(params)}`\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TabsComponent, {\n      children: [/*#__PURE__*/_jsxDEV(TabList, {\n        children: razredi.map((razred, i) => /*#__PURE__*/_jsxDEV(Tab, {\n          onClick: () => goToPosts({\n            idOdjeljenja: razred.id_razred\n          }),\n          children: razred.razred\n        }, razred.id_razred, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), razredi.map((razred, i) => /*#__PURE__*/_jsxDEV(TabPanel, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Razrednik: \", razred.razrednik]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabsComponent, {\n          children: [/*#__PURE__*/_jsxDEV(TabList, {\n            children: razredID && predmeti.map((predmet, i) => {\n              return /*#__PURE__*/_jsxDEV(Tab, {\n                children: predmet.naziv\n              }, predmet.id_predmet, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 28\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), predmeti.map((predmet, i) => {\n            return /*#__PURE__*/_jsxDEV(TabPanel, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Ocjena: \", i]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Tabs, \"Z50L4yMdTCmgguuxgUKDoUPRHGY=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector, useSearchParams];\n});\n\n_c = Tabs;\nexport default Tabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabs\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","createSearchParams","useNavigate","useParams","useSearchParams","Tab","Tabs","TabsComponent","TabList","TabPanel","ucitajUcenika","getParamFromUrl","paramName","url","window","location","search","params","URLSearchParams","paramValue","get","razredi","predmeti","dispatch","navigate","idUcenik","ucenik","state","ucenici","items","filter","searchParams","setSearchParams","razredID","setRazredID","id_razred","defaultUrl","setDefaultUrl","goToPosts","map","razred","i","idOdjeljenja","razrednik","predmet","naziv","id_predmet"],"sources":["C:/Users/pc/Desktop/balkon-project/client/src/components/Tabs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useParams,\r\n  useSearchParams,\r\n} from 'react-router-dom';\r\nimport { Tab, Tabs as TabsComponent, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { ucitajUcenika } from '../redux/ucenici/actions';\r\n\r\nfunction getParamFromUrl(paramName) {\r\n  let url = window.location.search;\r\n  const params = new URLSearchParams(url);\r\n  const paramValue = params.get(`${paramName}`);\r\n  return paramValue ? paramValue : '';\r\n}\r\n\r\nconst Tabs = ({ razredi = [], predmeti = [] }) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { idUcenik } = useParams();\r\n\r\n  const [ucenik] = useSelector((state) =>\r\n    state.ucenici.items.filter((ucenik) => ucenik.idUcenik === +idUcenik)\r\n  );\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [razredID, setRazredID] = useState(razredi[0].id_razred);\r\n\r\n  const [defaultUrl, setDefaultUrl] = useState(\r\n    getParamFromUrl('idOdjeljenja') || `${razredID}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    navigate({\r\n      search: `?${createSearchParams(`idOdjeljenja=${defaultUrl}`)}`,\r\n    });\r\n  }, []);\r\n\r\n  const goToPosts = (params) =>\r\n    navigate({\r\n      /* pathname: '/posts', */\r\n      search: `?${createSearchParams(params)}`,\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <TabsComponent>\r\n        <TabList>\r\n          {razredi.map((razred, i) => (\r\n            <Tab\r\n              key={razred.id_razred}\r\n              onClick={() => goToPosts({ idOdjeljenja: razred.id_razred })}\r\n            >\r\n              {razred.razred}\r\n            </Tab>\r\n          ))}\r\n        </TabList>\r\n        {razredi.map((razred, i) => (\r\n          <TabPanel key={i}>\r\n            <h2>Razrednik: {razred.razrednik}</h2>\r\n            <TabsComponent>\r\n              <TabList>\r\n                {razredID &&\r\n                  predmeti.map((predmet, i) => {\r\n                    return <Tab key={predmet.id_predmet}>{predmet.naziv}</Tab>;\r\n                  })}\r\n              </TabList>\r\n              {predmeti.map((predmet, i) => {\r\n                return (\r\n                  <TabPanel key={i}>\r\n                    <h2>Ocjena: {i}</h2>\r\n                  </TabPanel>\r\n                );\r\n              })}\r\n            </TabsComponent>\r\n          </TabPanel>\r\n        ))}\r\n      </TabsComponent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}