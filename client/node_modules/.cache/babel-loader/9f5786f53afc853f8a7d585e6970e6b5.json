{"ast":null,"code":"import fetchInstance from '../utils/fetchInstance';\nimport { uceniciTypes } from './types';\nexport const ucitajSveUcenike = () => async dispatch => {\n  try {\n    dispatch({\n      type: uceniciTypes.UCITAJ_UCENIKE_REQUEST\n    });\n    const result = await fetchInstance('http://localhost:3001/ucenici');\n    dispatch({\n      type: uceniciTypes.UCITAJ_UCENIKE_SUCCESS,\n      payload: result.ucenici\n    });\n  } catch (error) {\n    dispatch({\n      type: uceniciTypes.UCITAJ_UCENIKE_ERROR,\n      error: error.message\n    });\n  }\n};\nexport const ucitajUcenika = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: uceniciTypes.UCITAJ_UCENIKA_REQUEST\n      });\n      const result = await fetchInstance(`http://localhost:3001/ucenici/${id}`); //const result = await response.json();\n\n      dispatch({\n        type: uceniciTypes.UCITAJ_UCENIKA_SUCCESS,\n        payload: result.ucenik\n      });\n    } catch (error) {\n      dispatch({\n        type: uceniciTypes.UCITAJ_UCENIKA_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const dodajUcenika = ucenik => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: uceniciTypes.DODAJ_UCENIKA_REQUEST\n      });\n      const response = await fetchInstance(`http://localhost:3001/ucenici`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ime: `${ucenik.ime}`,\n          prezime: `${ucenik.prezime}`,\n          birthday: `${ucenik.birthday}`,\n          image: `${ucenik.image}`,\n          imeOca: `${ucenik.imeOca}`,\n          imeMajke: `${ucenik.imeMajke}`,\n          maticniBroj: `${ucenik.maticniBroj}`,\n          adresa: `${ucenik.adresaStanovanja}`\n        })\n      });\n      const result = await response.json();\n      dispatch({\n        type: uceniciTypes.DODAJ_UCENIKA_SUCCESS,\n        payload: result.data\n      });\n    } catch (error) {\n      dispatch({\n        type: uceniciTypes.DODAJ_UCENIKA_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const urediUcenika = ucenik => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: uceniciTypes.UREDI_UCENIKA_REQUEST\n      });\n      const result = await fetchInstance(`http://localhost:3001/ucenici/${ucenik.idUcenik}`, {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ime: `${ucenik.ime}`,\n          prezime: `${ucenik.prezime}`,\n          birthday: `${ucenik.birthday}`,\n          image: `${ucenik.image}`,\n          imeMajke: `${ucenik.imeMajke}`,\n          imeOca: `${ucenik.imeOca}`,\n          adresa: `${ucenik.adresa}`,\n          maticniBroj: `${ucenik.maticniBroj}`\n        })\n      });\n      dispatch({\n        type: uceniciTypes.UREDI_UCENIKA_SUCCESS,\n        payload: result.data\n      });\n    } catch (error) {\n      dispatch({\n        type: uceniciTypes.UREDI_UCENIKA_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const obrisiUcenika = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: uceniciTypes.OBRISI_UCENIKA_REQUEST\n      });\n      const result = await fetchInstance(`http://localhost:3001/ucenici/${id}`, {\n        method: 'DELETE'\n      });\n      dispatch({\n        type: uceniciTypes.OBRISI_UCENIKA_SUCCESS,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: uceniciTypes.OBRISI_UCENIKA_ERROR,\n        error: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["fetchInstance","uceniciTypes","ucitajSveUcenike","dispatch","type","UCITAJ_UCENIKE_REQUEST","result","UCITAJ_UCENIKE_SUCCESS","payload","ucenici","error","UCITAJ_UCENIKE_ERROR","message","ucitajUcenika","id","UCITAJ_UCENIKA_REQUEST","UCITAJ_UCENIKA_SUCCESS","ucenik","UCITAJ_UCENIKA_ERROR","dodajUcenika","DODAJ_UCENIKA_REQUEST","response","method","headers","Accept","body","JSON","stringify","ime","prezime","birthday","image","imeOca","imeMajke","maticniBroj","adresa","adresaStanovanja","json","DODAJ_UCENIKA_SUCCESS","data","DODAJ_UCENIKA_ERROR","urediUcenika","UREDI_UCENIKA_REQUEST","idUcenik","UREDI_UCENIKA_SUCCESS","UREDI_UCENIKA_ERROR","obrisiUcenika","OBRISI_UCENIKA_REQUEST","OBRISI_UCENIKA_SUCCESS","OBRISI_UCENIKA_ERROR"],"sources":["C:/Users/pc/Desktop/balkon-project/client/src/redux/ucenici/actions.js"],"sourcesContent":["import fetchInstance from '../utils/fetchInstance';\r\nimport { uceniciTypes } from './types';\r\n\r\nexport const ucitajSveUcenike = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: uceniciTypes.UCITAJ_UCENIKE_REQUEST });\r\n    const result = await fetchInstance('http://localhost:3001/ucenici');\r\n    dispatch({\r\n      type: uceniciTypes.UCITAJ_UCENIKE_SUCCESS,\r\n      payload: result.ucenici,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: uceniciTypes.UCITAJ_UCENIKE_ERROR,\r\n      error: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const ucitajUcenika = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: uceniciTypes.UCITAJ_UCENIKA_REQUEST });\r\n      const result = await fetchInstance(`http://localhost:3001/ucenici/${id}`);\r\n      //const result = await response.json();\r\n      dispatch({\r\n        type: uceniciTypes.UCITAJ_UCENIKA_SUCCESS,\r\n        payload: result.ucenik,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: uceniciTypes.UCITAJ_UCENIKA_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const dodajUcenika = (ucenik) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: uceniciTypes.DODAJ_UCENIKA_REQUEST });\r\n      const response = await fetchInstance(`http://localhost:3001/ucenici`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ime: `${ucenik.ime}`,\r\n          prezime: `${ucenik.prezime}`,\r\n          birthday: `${ucenik.birthday}`,\r\n          image: `${ucenik.image}`,\r\n          imeOca: `${ucenik.imeOca}`,\r\n          imeMajke: `${ucenik.imeMajke}`,\r\n          maticniBroj: `${ucenik.maticniBroj}`,\r\n          adresa: `${ucenik.adresaStanovanja}`,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: uceniciTypes.DODAJ_UCENIKA_SUCCESS,\r\n        payload: result.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: uceniciTypes.DODAJ_UCENIKA_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const urediUcenika = (ucenik) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: uceniciTypes.UREDI_UCENIKA_REQUEST });\r\n      const result = await fetchInstance(\r\n        `http://localhost:3001/ucenici/${ucenik.idUcenik}`,\r\n        {\r\n          method: 'PUT',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            ime: `${ucenik.ime}`,\r\n            prezime: `${ucenik.prezime}`,\r\n            birthday: `${ucenik.birthday}`,\r\n            image: `${ucenik.image}`,\r\n            imeMajke: `${ucenik.imeMajke}`,\r\n            imeOca: `${ucenik.imeOca}`,\r\n            adresa: `${ucenik.adresa}`,\r\n            maticniBroj: `${ucenik.maticniBroj}`,\r\n          }),\r\n        }\r\n      );\r\n      dispatch({\r\n        type: uceniciTypes.UREDI_UCENIKA_SUCCESS,\r\n        payload: result.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: uceniciTypes.UREDI_UCENIKA_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const obrisiUcenika = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: uceniciTypes.OBRISI_UCENIKA_REQUEST });\r\n      const result = await fetchInstance(\r\n        `http://localhost:3001/ucenici/${id}`,\r\n        {\r\n          method: 'DELETE',\r\n        }\r\n      );\r\n      dispatch({\r\n        type: uceniciTypes.OBRISI_UCENIKA_SUCCESS,\r\n        payload: id,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: uceniciTypes.OBRISI_UCENIKA_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}