{"ast":null,"code":"import { predmetiTypes } from './types';\nimport { getAuthTokens } from '../utils';\nimport fetchInstance from '../utils/fetchInstance';\nexport const ucitajSvePredmete = () => async dispatch => {\n  try {\n    dispatch({\n      type: predmetiTypes.UCITAJ_PREDMETE_REQUEST\n    });\n    const response = await fetchInstance('http://localhost:3001/predmeti');\n    const result = await response.json();\n    dispatch({\n      type: predmetiTypes.UCITAJ_PREDMETE_SUCCESS,\n      payload: result.predmeti\n    });\n  } catch (error) {\n    dispatch({\n      type: predmetiTypes.UCITAJ_PREDMETE_ERROR,\n      error: error.message\n    });\n  }\n};\nexport const ucitajUcenikovePredmete = (idUcenik, idRazred) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: predmetiTypes.UCITAJ_UCENIKOVE_PREDMETE_REQUEST\n      });\n      const response = await fetchInstance(`http://localhost:3001/ucenici/${idUcenik}/${idRazred}/predmeti`);\n      const result = await response.json();\n      dispatch({\n        type: predmetiTypes.UCITAJ_UCENIKOVE_PREDMETE_SUCCESS,\n        payload: result.ucenikoviPredmeti || []\n      });\n      return result.ucenikoviPredmeti;\n    } catch (error) {\n      dispatch({\n        type: predmetiTypes.UCITAJ_UCENIKOVE_PREDMETE_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const ucitajPredmet = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: predmetiTypes.UCITAJ_PREDMET_REQUEST\n      });\n      const response = await fetchInstance(`http://localhost:3001/predmeti/${id}`);\n      const result = await response.json();\n      console.log(result.predmet);\n\n      if (!result.predmet) {\n        dispatch({\n          type: predmetiTypes.UCITAJ_PREDMET_SUCCESS,\n          payload: []\n        });\n      }\n\n      dispatch({\n        type: predmetiTypes.UCITAJ_PREDMET_SUCCESS,\n        payload: result.predmet\n      });\n    } catch (error) {\n      dispatch({\n        type: predmetiTypes.UCITAJ_PREDMET_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const obrisiPredmet = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: predmetiTypes.OBRISI_PREDMET_REQUEST\n      });\n      const response = await fetchInstance(`http://localhost:3001/predmeti/${id}`, {\n        method: 'DELETE'\n      });\n      await response.json();\n      dispatch({\n        type: predmetiTypes.OBRISI_PREDMET_SUCCESS,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: predmetiTypes.OBRISI_PREDMET_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const urediPredmet = predmet => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: predmetiTypes.UREDI_PREDMET_REQUEST\n      });\n      const response = await fetchInstance(`http://localhost:3001/predmeti/${predmet.idPredmet}`, {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          naziv: `${predmet.naziv}`\n        })\n      });\n      const result = await response.json();\n      dispatch({\n        type: predmetiTypes.UREDI_PREDMET_SUCCESS,\n        payload: result.data\n      });\n    } catch (error) {\n      dispatch({\n        type: predmetiTypes.UREDI_PREDMET_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const dodajPredmet = predmet => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: predmetiTypes.DODAJ_PREDMET_REQUEST\n      });\n      const result = await fetchInstance(`http://localhost:3001/predmeti`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          naziv: `${predmet.naziv}`\n        })\n      });\n      dispatch({\n        type: predmetiTypes.DODAJ_PREDMET_SUCCESS,\n        payload: result.predmet\n      });\n    } catch (error) {\n      dispatch({\n        type: predmetiTypes.DODAJ_PREDMET_ERROR,\n        error: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["predmetiTypes","getAuthTokens","fetchInstance","ucitajSvePredmete","dispatch","type","UCITAJ_PREDMETE_REQUEST","response","result","json","UCITAJ_PREDMETE_SUCCESS","payload","predmeti","error","UCITAJ_PREDMETE_ERROR","message","ucitajUcenikovePredmete","idUcenik","idRazred","UCITAJ_UCENIKOVE_PREDMETE_REQUEST","UCITAJ_UCENIKOVE_PREDMETE_SUCCESS","ucenikoviPredmeti","UCITAJ_UCENIKOVE_PREDMETE_ERROR","ucitajPredmet","id","UCITAJ_PREDMET_REQUEST","console","log","predmet","UCITAJ_PREDMET_SUCCESS","UCITAJ_PREDMET_ERROR","obrisiPredmet","OBRISI_PREDMET_REQUEST","method","OBRISI_PREDMET_SUCCESS","OBRISI_PREDMET_ERROR","urediPredmet","UREDI_PREDMET_REQUEST","idPredmet","headers","Accept","body","JSON","stringify","naziv","UREDI_PREDMET_SUCCESS","data","UREDI_PREDMET_ERROR","dodajPredmet","DODAJ_PREDMET_REQUEST","DODAJ_PREDMET_SUCCESS","DODAJ_PREDMET_ERROR"],"sources":["C:/Users/pc/Desktop/balkon-project/client/src/redux/predmeti/actions.js"],"sourcesContent":["import { predmetiTypes } from './types';\r\nimport { getAuthTokens } from '../utils';\r\nimport fetchInstance from '../utils/fetchInstance';\r\n\r\nexport const ucitajSvePredmete = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: predmetiTypes.UCITAJ_PREDMETE_REQUEST });\r\n    const response = await fetchInstance('http://localhost:3001/predmeti');\r\n    const result = await response.json();\r\n    dispatch({\r\n      type: predmetiTypes.UCITAJ_PREDMETE_SUCCESS,\r\n      payload: result.predmeti,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: predmetiTypes.UCITAJ_PREDMETE_ERROR,\r\n      error: error.message,\r\n    });\r\n  }\r\n};\r\nexport const ucitajUcenikovePredmete = (idUcenik, idRazred) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: predmetiTypes.UCITAJ_UCENIKOVE_PREDMETE_REQUEST });\r\n      const response = await fetchInstance(\r\n        `http://localhost:3001/ucenici/${idUcenik}/${idRazred}/predmeti`\r\n      );\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: predmetiTypes.UCITAJ_UCENIKOVE_PREDMETE_SUCCESS,\r\n        payload: result.ucenikoviPredmeti || [],\r\n      });\r\n      return result.ucenikoviPredmeti;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: predmetiTypes.UCITAJ_UCENIKOVE_PREDMETE_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const ucitajPredmet = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: predmetiTypes.UCITAJ_PREDMET_REQUEST });\r\n      const response = await fetchInstance(\r\n        `http://localhost:3001/predmeti/${id}`\r\n      );\r\n      const result = await response.json();\r\n      console.log(result.predmet);\r\n      if (!result.predmet) {\r\n        dispatch({\r\n          type: predmetiTypes.UCITAJ_PREDMET_SUCCESS,\r\n          payload: [],\r\n        });\r\n      }\r\n      dispatch({\r\n        type: predmetiTypes.UCITAJ_PREDMET_SUCCESS,\r\n        payload: result.predmet,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: predmetiTypes.UCITAJ_PREDMET_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const obrisiPredmet = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: predmetiTypes.OBRISI_PREDMET_REQUEST });\r\n      const response = await fetchInstance(\r\n        `http://localhost:3001/predmeti/${id}`,\r\n        {\r\n          method: 'DELETE',\r\n        }\r\n      );\r\n      await response.json();\r\n      dispatch({\r\n        type: predmetiTypes.OBRISI_PREDMET_SUCCESS,\r\n        payload: id,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: predmetiTypes.OBRISI_PREDMET_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const urediPredmet = (predmet) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: predmetiTypes.UREDI_PREDMET_REQUEST });\r\n      const response = await fetchInstance(\r\n        `http://localhost:3001/predmeti/${predmet.idPredmet}`,\r\n        {\r\n          method: 'PUT',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            naziv: `${predmet.naziv}`,\r\n          }),\r\n        }\r\n      );\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: predmetiTypes.UREDI_PREDMET_SUCCESS,\r\n        payload: result.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: predmetiTypes.UREDI_PREDMET_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const dodajPredmet = (predmet) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: predmetiTypes.DODAJ_PREDMET_REQUEST });\r\n      const result = await fetchInstance(`http://localhost:3001/predmeti`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          naziv: `${predmet.naziv}`,\r\n        }),\r\n      });\r\n      dispatch({\r\n        type: predmetiTypes.DODAJ_PREDMET_SUCCESS,\r\n        payload: result.predmet,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: predmetiTypes.DODAJ_PREDMET_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,SAA9B;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACzD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEL,aAAa,CAACM;IAAtB,CAAD,CAAR;IACA,MAAMC,QAAQ,GAAG,MAAML,aAAa,CAAC,gCAAD,CAApC;IACA,MAAMM,MAAM,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAArB;IACAL,QAAQ,CAAC;MACPC,IAAI,EAAEL,aAAa,CAACU,uBADb;MAEPC,OAAO,EAAEH,MAAM,CAACI;IAFT,CAAD,CAAR;EAID,CARD,CAQE,OAAOC,KAAP,EAAc;IACdT,QAAQ,CAAC;MACPC,IAAI,EAAEL,aAAa,CAACc,qBADb;MAEPD,KAAK,EAAEA,KAAK,CAACE;IAFN,CAAD,CAAR;EAID;AACF,CAfM;AAgBP,OAAO,MAAMC,uBAAuB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;EAC7D,OAAO,MAAOd,QAAP,IAAoB;IACzB,IAAI;MACFA,QAAQ,CAAC;QAAEC,IAAI,EAAEL,aAAa,CAACmB;MAAtB,CAAD,CAAR;MACA,MAAMZ,QAAQ,GAAG,MAAML,aAAa,CACjC,iCAAgCe,QAAS,IAAGC,QAAS,WADpB,CAApC;MAGA,MAAMV,MAAM,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAArB;MACAL,QAAQ,CAAC;QACPC,IAAI,EAAEL,aAAa,CAACoB,iCADb;QAEPT,OAAO,EAAEH,MAAM,CAACa,iBAAP,IAA4B;MAF9B,CAAD,CAAR;MAIA,OAAOb,MAAM,CAACa,iBAAd;IACD,CAXD,CAWE,OAAOR,KAAP,EAAc;MACdT,QAAQ,CAAC;QACPC,IAAI,EAAEL,aAAa,CAACsB,+BADb;QAEPT,KAAK,EAAEA,KAAK,CAACE;MAFN,CAAD,CAAR;IAID;EACF,CAlBD;AAmBD,CApBM;AAsBP,OAAO,MAAMQ,aAAa,GAAIC,EAAD,IAAQ;EACnC,OAAO,MAAOpB,QAAP,IAAoB;IACzB,IAAI;MACFA,QAAQ,CAAC;QAAEC,IAAI,EAAEL,aAAa,CAACyB;MAAtB,CAAD,CAAR;MACA,MAAMlB,QAAQ,GAAG,MAAML,aAAa,CACjC,kCAAiCsB,EAAG,EADH,CAApC;MAGA,MAAMhB,MAAM,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAArB;MACAiB,OAAO,CAACC,GAAR,CAAYnB,MAAM,CAACoB,OAAnB;;MACA,IAAI,CAACpB,MAAM,CAACoB,OAAZ,EAAqB;QACnBxB,QAAQ,CAAC;UACPC,IAAI,EAAEL,aAAa,CAAC6B,sBADb;UAEPlB,OAAO,EAAE;QAFF,CAAD,CAAR;MAID;;MACDP,QAAQ,CAAC;QACPC,IAAI,EAAEL,aAAa,CAAC6B,sBADb;QAEPlB,OAAO,EAAEH,MAAM,CAACoB;MAFT,CAAD,CAAR;IAID,CAjBD,CAiBE,OAAOf,KAAP,EAAc;MACdT,QAAQ,CAAC;QACPC,IAAI,EAAEL,aAAa,CAAC8B,oBADb;QAEPjB,KAAK,EAAEA,KAAK,CAACE;MAFN,CAAD,CAAR;IAID;EACF,CAxBD;AAyBD,CA1BM;AA4BP,OAAO,MAAMgB,aAAa,GAAIP,EAAD,IAAQ;EACnC,OAAO,MAAOpB,QAAP,IAAoB;IACzB,IAAI;MACFA,QAAQ,CAAC;QAAEC,IAAI,EAAEL,aAAa,CAACgC;MAAtB,CAAD,CAAR;MACA,MAAMzB,QAAQ,GAAG,MAAML,aAAa,CACjC,kCAAiCsB,EAAG,EADH,EAElC;QACES,MAAM,EAAE;MADV,CAFkC,CAApC;MAMA,MAAM1B,QAAQ,CAACE,IAAT,EAAN;MACAL,QAAQ,CAAC;QACPC,IAAI,EAAEL,aAAa,CAACkC,sBADb;QAEPvB,OAAO,EAAEa;MAFF,CAAD,CAAR;IAID,CAbD,CAaE,OAAOX,KAAP,EAAc;MACdT,QAAQ,CAAC;QACPC,IAAI,EAAEL,aAAa,CAACmC,oBADb;QAEPtB,KAAK,EAAEA,KAAK,CAACE;MAFN,CAAD,CAAR;IAID;EACF,CApBD;AAqBD,CAtBM;AAwBP,OAAO,MAAMqB,YAAY,GAAIR,OAAD,IAAa;EACvC,OAAO,MAAOxB,QAAP,IAAoB;IACzB,IAAI;MACFA,QAAQ,CAAC;QAAEC,IAAI,EAAEL,aAAa,CAACqC;MAAtB,CAAD,CAAR;MACA,MAAM9B,QAAQ,GAAG,MAAML,aAAa,CACjC,kCAAiC0B,OAAO,CAACU,SAAU,EADlB,EAElC;QACEL,MAAM,EAAE,KADV;QAEEM,OAAO,EAAE;UACPC,MAAM,EAAE,kBADD;UAEP,gBAAgB;QAFT,CAFX;QAMEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,KAAK,EAAG,GAAEhB,OAAO,CAACgB,KAAM;QADL,CAAf;MANR,CAFkC,CAApC;MAaA,MAAMpC,MAAM,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAArB;MACAL,QAAQ,CAAC;QACPC,IAAI,EAAEL,aAAa,CAAC6C,qBADb;QAEPlC,OAAO,EAAEH,MAAM,CAACsC;MAFT,CAAD,CAAR;IAID,CApBD,CAoBE,OAAOjC,KAAP,EAAc;MACdT,QAAQ,CAAC;QACPC,IAAI,EAAEL,aAAa,CAAC+C,mBADb;QAEPlC,KAAK,EAAEA,KAAK,CAACE;MAFN,CAAD,CAAR;IAID;EACF,CA3BD;AA4BD,CA7BM;AA+BP,OAAO,MAAMiC,YAAY,GAAIpB,OAAD,IAAa;EACvC,OAAO,MAAOxB,QAAP,IAAoB;IACzB,IAAI;MACFA,QAAQ,CAAC;QAAEC,IAAI,EAAEL,aAAa,CAACiD;MAAtB,CAAD,CAAR;MACA,MAAMzC,MAAM,GAAG,MAAMN,aAAa,CAAE,gCAAF,EAAmC;QACnE+B,MAAM,EAAE,MAD2D;QAEnEM,OAAO,EAAE;UACPC,MAAM,EAAE,kBADD;UAEP,gBAAgB;QAFT,CAF0D;QAMnEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,KAAK,EAAG,GAAEhB,OAAO,CAACgB,KAAM;QADL,CAAf;MAN6D,CAAnC,CAAlC;MAUAxC,QAAQ,CAAC;QACPC,IAAI,EAAEL,aAAa,CAACkD,qBADb;QAEPvC,OAAO,EAAEH,MAAM,CAACoB;MAFT,CAAD,CAAR;IAID,CAhBD,CAgBE,OAAOf,KAAP,EAAc;MACdT,QAAQ,CAAC;QACPC,IAAI,EAAEL,aAAa,CAACmD,mBADb;QAEPtC,KAAK,EAAEA,KAAK,CAACE;MAFN,CAAD,CAAR;IAID;EACF,CAvBD;AAwBD,CAzBM"},"metadata":{},"sourceType":"module"}