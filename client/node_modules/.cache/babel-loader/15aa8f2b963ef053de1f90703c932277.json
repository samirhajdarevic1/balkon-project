{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\balkon-project\\\\client\\\\src\\\\components\\\\PredmetForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport formStyles from './Form.module.css';\nimport { useSearchParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { dodajPredmet } from '../redux/predmeti/actions';\nimport PredmetRow from './PredmetRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PredmetForm = props => {\n  _s();\n\n  let [searchParams, setSearchParams] = useSearchParams();\n  console.log(props);\n  const [posting, setPosting] = useState(props.posting);\n  const [editing, setEditing] = useState(props.editing);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [naziv, setNaziv] = useState(props.naziv);\n  const [predmet, setPredmet] = useState('');\n  console.log(naziv);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    let params = serializeFormQuery(event.target);\n    console.log(params);\n    setSearchParams(params);\n    /*   dispatch(dodajPredmet({ naziv: predmet })).then(() =>\r\n      navigate('/predmeti')\r\n    ); */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [editing && /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: naziv,\n        onChange: e => {\n          setNaziv(e.target.value);\n          console.log();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Done editing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), posting ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      className: formStyles['form-control'],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: predmet,\n              onChange: e => setPredmet(e.target.value),\n              type: \"text\",\n              placeholder: \"naziv predmeta\",\n              name: \"predmet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add predmet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nothing here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n  /*  props.editing ? (\r\n    <form>\r\n      <input\r\n        value={naziv}\r\n        onChange={(e) => {\r\n          setNaziv(e.target.value);\r\n          console.log();\r\n        }}\r\n      />\r\n      <button>Done editing</button>\r\n    </form>\r\n  ) : (\r\n    <form onSubmit={submitHandler} className={formStyles['form-control']}>\r\n      <div>\r\n        <ul>\r\n          <li>\r\n            <input\r\n              value={predmet}\r\n              onChange={(e) => setPredmet(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"naziv predmeta\"\r\n              name=\"predmet\"\r\n            />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <button>Add predmet</button>\r\n    </form>\r\n  ); */\n};\n\n_s(PredmetForm, \"AkrBejJwphxc7eE9B69ZWgB7x/o=\", false, function () {\n  return [useSearchParams, useNavigate, useDispatch];\n});\n\n_c = PredmetForm;\nexport default PredmetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PredmetForm\");","map":{"version":3,"names":["React","useEffect","useState","formStyles","useSearchParams","useSelector","useDispatch","useParams","useNavigate","Link","dodajPredmet","PredmetRow","PredmetForm","props","searchParams","setSearchParams","console","log","posting","setPosting","editing","setEditing","navigate","dispatch","naziv","setNaziv","predmet","setPredmet","submitHandler","e","preventDefault","params","serializeFormQuery","event","target","value"],"sources":["C:/Users/pc/Desktop/balkon-project/client/src/components/PredmetForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport formStyles from './Form.module.css';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport { dodajPredmet } from '../redux/predmeti/actions';\r\nimport PredmetRow from './PredmetRow';\r\n\r\nconst PredmetForm = (props) => {\r\n  let [searchParams, setSearchParams] = useSearchParams();\r\n  console.log(props);\r\n  const [posting, setPosting] = useState(props.posting);\r\n  const [editing, setEditing] = useState(props.editing);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [naziv, setNaziv] = useState(props.naziv);\r\n  const [predmet, setPredmet] = useState('');\r\n  console.log(naziv);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let params = serializeFormQuery(event.target);\r\n    console.log(params);\r\n    setSearchParams(params);\r\n    /*   dispatch(dodajPredmet({ naziv: predmet })).then(() =>\r\n      navigate('/predmeti')\r\n    ); */\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {editing && (\r\n        <form>\r\n          <input\r\n            value={naziv}\r\n            onChange={(e) => {\r\n              setNaziv(e.target.value);\r\n              console.log();\r\n            }}\r\n          />\r\n          <button>Done editing</button>\r\n        </form>\r\n      )}\r\n      {posting ? (\r\n        <form onSubmit={submitHandler} className={formStyles['form-control']}>\r\n          <div>\r\n            <ul>\r\n              <li>\r\n                <input\r\n                  value={predmet}\r\n                  onChange={(e) => setPredmet(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"naziv predmeta\"\r\n                  name=\"predmet\"\r\n                />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <button>Add predmet</button>\r\n        </form>\r\n      ) : (\r\n        <p>Nothing here</p>\r\n      )}\r\n    </div>\r\n  );\r\n  /*  props.editing ? (\r\n    <form>\r\n      <input\r\n        value={naziv}\r\n        onChange={(e) => {\r\n          setNaziv(e.target.value);\r\n          console.log();\r\n        }}\r\n      />\r\n      <button>Done editing</button>\r\n    </form>\r\n  ) : (\r\n    <form onSubmit={submitHandler} className={formStyles['form-control']}>\r\n      <div>\r\n        <ul>\r\n          <li>\r\n            <input\r\n              value={predmet}\r\n              onChange={(e) => setPredmet(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"naziv predmeta\"\r\n              name=\"predmet\"\r\n            />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <button>Add predmet</button>\r\n    </form>\r\n  ); */\r\n};\r\n\r\nexport default PredmetForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,IAAjC,QAA6C,kBAA7C;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,IAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCX,eAAe,EAArD;EACAY,OAAO,CAACC,GAAR,CAAYJ,KAAZ;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAACW,KAAK,CAACK,OAAP,CAAtC;EACA,MAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAACW,KAAK,CAACO,OAAP,CAAtC;EAEA,MAAME,QAAQ,GAAGd,WAAW,EAA5B;EACA,MAAMe,QAAQ,GAAGjB,WAAW,EAA5B;EACA,MAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAACW,KAAK,CAACW,KAAP,CAAlC;EACA,MAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAC,EAAD,CAAtC;EACAc,OAAO,CAACC,GAAR,CAAYO,KAAZ;;EAEA,MAAMI,aAAa,GAAIC,CAAD,IAAO;IAC3BA,CAAC,CAACC,cAAF;IACA,IAAIC,MAAM,GAAGC,kBAAkB,CAACC,KAAK,CAACC,MAAP,CAA/B;IACAlB,OAAO,CAACC,GAAR,CAAYc,MAAZ;IACAhB,eAAe,CAACgB,MAAD,CAAf;IACA;AACJ;AACA;EACG,CARD;;EAUA,oBACE;IAAA,WACGX,OAAO,iBACN;MAAA,wBACE;QACE,KAAK,EAAEI,KADT;QAEE,QAAQ,EAAGK,CAAD,IAAO;UACfJ,QAAQ,CAACI,CAAC,CAACK,MAAF,CAASC,KAAV,CAAR;UACAnB,OAAO,CAACC,GAAR;QACD;MALH;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAaGC,OAAO,gBACN;MAAM,QAAQ,EAAEU,aAAhB;MAA+B,SAAS,EAAEzB,UAAU,CAAC,cAAD,CAApD;MAAA,wBACE;QAAA,uBACE;UAAA,uBACE;YAAA,uBACE;cACE,KAAK,EAAEuB,OADT;cAEE,QAAQ,EAAGG,CAAD,IAAOF,UAAU,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV,CAF7B;cAGE,IAAI,EAAC,MAHP;cAIE,WAAW,EAAC,gBAJd;cAKE,IAAI,EAAC;YALP;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAcE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA;MAAA;MAAA;MAAA;IAAA,QADM,gBAkBN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA/BJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;EAoCA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CAvFD;;GAAMvB,W;UACkCR,e,EAKrBI,W,EACAF,W;;;KAPbM,W;AAyFN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}