{"ast":null,"code":"import fetchInstance from '../utils/fetchInstance';\nimport { razrediTypes } from './types';\nexport const ucitajSveRazrede = () => async dispatch => {\n  try {\n    dispatch({\n      type: razrediTypes.UCITAJ_RAZREDE_REQUEST\n    });\n    const response = await fetch('http://localhost:3001/odjeljenja');\n    const result = await response.json();\n    result.reverse();\n    dispatch({\n      type: razrediTypes.UCITAJ_RAZREDE_SUCCESS,\n      payload: result.odjeljenja\n    });\n  } catch (error) {\n    dispatch({\n      type: razrediTypes.UCITAJ_RAZREDE_ERROR,\n      error: error.message\n    });\n  }\n}; //UCITAJ UCENIKOVE RAZREDE\n\nexport const ucitajUcenikoveRazrede = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: razrediTypes.UCITAJ_UCENIKOVE_RAZREDE_REQUEST\n      });\n      const result = await fetchInstance(`http://localhost:3001/ucenici/${id}/razredi`); // const result = await response.json();\n\n      dispatch({\n        type: razrediTypes.UCITAJ_UCENIKOVE_RAZREDE_SUCCESS,\n        payload: result.ucenikovaOdjeljenja.reverse() || []\n      });\n    } catch (error) {\n      dispatch({\n        type: razrediTypes.UCITAJ_UCENIKOVE_RAZREDE_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const dodajRazred = razred => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: razrediTypes.DODAJ_RAZRED_REQUEST\n      });\n      const response = await fetch(`http://localhost:3001/odjeljenja`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idSkolskaGodina: `${razred.idSkolskaGodina}`,\n          oznakaOdjeljenja: `${razred.oznakaOdjeljenja}`,\n          razred: `${razred.razred}`,\n          idNastavnikRazrednik: `${razred.idNastavnikRazrednik}`\n        })\n      });\n      const result = await response.json();\n      dispatch({\n        type: razrediTypes.DODAJ_RAZRED_SUCCESS,\n        payload: result.razred\n      });\n    } catch (error) {\n      dispatch({\n        type: razrediTypes.DODAJ_RAZRED_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const urediRazred = razred => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: razrediTypes.UREDI_RAZRED_REQUEST\n      });\n      const response = await fetch(`http://localhost:3001/odjeljenja/${razred.idOdjeljenja}`, {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idSkolskaGodina: `${razred.idSkolskaGodina}`,\n          idNastavnikRazrednik: `${razred.idNastavnikRazrednik}`,\n          oznakaOdjeljenja: `${razred.oznakaOdjeljenja}`,\n          razred: `${razred.razred}`\n        })\n      });\n      const result = await response.json();\n      dispatch({\n        type: razrediTypes.UREDI_RAZRED_SUCCESS,\n        payload: result.data\n      });\n    } catch (error) {\n      dispatch({\n        type: razrediTypes.UREDI_RAZRED_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const obrisiRazred = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: razrediTypes.OBRISI_RAZRED_REQUEST\n      });\n      const response = await fetchInstance(`http://localhost:3001/odjeljenja/${id}`, {\n        method: 'DELETE'\n      });\n      dispatch({\n        type: razrediTypes.OBRISI_RAZRED_SUCCESS,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: razrediTypes.OBRISI_RAZRED_ERROR,\n        error: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["fetchInstance","razrediTypes","ucitajSveRazrede","dispatch","type","UCITAJ_RAZREDE_REQUEST","response","fetch","result","json","reverse","UCITAJ_RAZREDE_SUCCESS","payload","odjeljenja","error","UCITAJ_RAZREDE_ERROR","message","ucitajUcenikoveRazrede","id","UCITAJ_UCENIKOVE_RAZREDE_REQUEST","UCITAJ_UCENIKOVE_RAZREDE_SUCCESS","ucenikovaOdjeljenja","UCITAJ_UCENIKOVE_RAZREDE_ERROR","dodajRazred","razred","DODAJ_RAZRED_REQUEST","method","headers","Accept","body","JSON","stringify","idSkolskaGodina","oznakaOdjeljenja","idNastavnikRazrednik","DODAJ_RAZRED_SUCCESS","DODAJ_RAZRED_ERROR","urediRazred","UREDI_RAZRED_REQUEST","idOdjeljenja","UREDI_RAZRED_SUCCESS","data","UREDI_RAZRED_ERROR","obrisiRazred","OBRISI_RAZRED_REQUEST","OBRISI_RAZRED_SUCCESS","OBRISI_RAZRED_ERROR"],"sources":["C:/Users/pc/Desktop/balkon-project/client/src/redux/odjeljenjaRazredi/actions.js"],"sourcesContent":["import fetchInstance from '../utils/fetchInstance';\r\nimport { razrediTypes } from './types';\r\n\r\nexport const ucitajSveRazrede = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: razrediTypes.UCITAJ_RAZREDE_REQUEST });\r\n    const response = await fetch('http://localhost:3001/odjeljenja');\r\n    const result = await response.json();\r\n    result.reverse();\r\n    dispatch({\r\n      type: razrediTypes.UCITAJ_RAZREDE_SUCCESS,\r\n      payload: result.odjeljenja,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: razrediTypes.UCITAJ_RAZREDE_ERROR,\r\n      error: error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//UCITAJ UCENIKOVE RAZREDE\r\n\r\nexport const ucitajUcenikoveRazrede = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: razrediTypes.UCITAJ_UCENIKOVE_RAZREDE_REQUEST });\r\n      const result = await fetchInstance(\r\n        `http://localhost:3001/ucenici/${id}/razredi`\r\n      );\r\n      // const result = await response.json();\r\n      dispatch({\r\n        type: razrediTypes.UCITAJ_UCENIKOVE_RAZREDE_SUCCESS,\r\n        payload: result.ucenikovaOdjeljenja.reverse() || [],\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: razrediTypes.UCITAJ_UCENIKOVE_RAZREDE_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const dodajRazred = (razred) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: razrediTypes.DODAJ_RAZRED_REQUEST });\r\n      const response = await fetch(`http://localhost:3001/odjeljenja`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          idSkolskaGodina: `${razred.idSkolskaGodina}`,\r\n          oznakaOdjeljenja: `${razred.oznakaOdjeljenja}`,\r\n          razred: `${razred.razred}`,\r\n          idNastavnikRazrednik: `${razred.idNastavnikRazrednik}`,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: razrediTypes.DODAJ_RAZRED_SUCCESS,\r\n        payload: result.razred,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: razrediTypes.DODAJ_RAZRED_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const urediRazred = (razred) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: razrediTypes.UREDI_RAZRED_REQUEST });\r\n      const response = await fetch(\r\n        `http://localhost:3001/odjeljenja/${razred.idOdjeljenja}`,\r\n        {\r\n          method: 'PUT',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            idSkolskaGodina: `${razred.idSkolskaGodina}`,\r\n            idNastavnikRazrednik: `${razred.idNastavnikRazrednik}`,\r\n            oznakaOdjeljenja: `${razred.oznakaOdjeljenja}`,\r\n            razred: `${razred.razred}`,\r\n          }),\r\n        }\r\n      );\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: razrediTypes.UREDI_RAZRED_SUCCESS,\r\n        payload: result.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: razrediTypes.UREDI_RAZRED_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const obrisiRazred = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: razrediTypes.OBRISI_RAZRED_REQUEST });\r\n      const response = await fetchInstance(\r\n        `http://localhost:3001/odjeljenja/${id}`,\r\n        {\r\n          method: 'DELETE',\r\n        }\r\n      );\r\n      dispatch({\r\n        type: razrediTypes.OBRISI_RAZRED_SUCCESS,\r\n        payload: id,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: razrediTypes.OBRISI_RAZRED_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}