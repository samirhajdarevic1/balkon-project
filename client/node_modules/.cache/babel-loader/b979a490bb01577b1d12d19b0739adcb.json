{"ast":null,"code":"import { getAuthTokens } from '../utils';\nimport fetchInstance from '../utils/fetchInstance';\nimport { userTypes } from './types';\nexport const dodajUsera = user => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: userTypes.DODAJ_USERA_REQUEST\n      });\n      const result = await fetchInstance(`http://localhost:3001/createUser`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json' // Authorization: `Bearer ${getAuthTokens().token}`,\n\n        },\n        body: JSON.stringify({\n          name: `${user.ime}`,\n          email: `${user.email}`,\n          password: `${user.password}`\n        })\n      });\n\n      if (result.success) {\n        window.location.href = '/login';\n      }\n\n      dispatch({\n        type: userTypes.DODAJ_USERA_SUCCESS,\n        payload: result.status\n      });\n    } catch (error) {\n      dispatch({\n        type: userTypes.DODAJ_USERA_ERROR,\n        error: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["getAuthTokens","fetchInstance","userTypes","dodajUsera","user","dispatch","type","DODAJ_USERA_REQUEST","result","method","headers","Accept","body","JSON","stringify","name","ime","email","password","success","window","location","href","DODAJ_USERA_SUCCESS","payload","status","error","DODAJ_USERA_ERROR","message"],"sources":["C:/Users/pc/Desktop/balkon-project/client/src/redux/users/actions.js"],"sourcesContent":["import { getAuthTokens } from '../utils';\r\nimport fetchInstance from '../utils/fetchInstance';\r\nimport { userTypes } from './types';\r\n\r\nexport const dodajUsera = (user) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: userTypes.DODAJ_USERA_REQUEST });\r\n      const result = await fetchInstance(`http://localhost:3001/createUser`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          // Authorization: `Bearer ${getAuthTokens().token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          name: `${user.ime}`,\r\n          email: `${user.email}`,\r\n          password: `${user.password}`,\r\n        }),\r\n      });\r\n      if (result.success) {\r\n        window.location.href = '/login';\r\n      }\r\n      dispatch({\r\n        type: userTypes.DODAJ_USERA_SUCCESS,\r\n        payload: result.status,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: userTypes.DODAJ_USERA_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,UAA9B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,SAAT,QAA0B,SAA1B;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;EAClC,OAAO,MAAOC,QAAP,IAAoB;IACzB,IAAI;MACFA,QAAQ,CAAC;QAAEC,IAAI,EAAEJ,SAAS,CAACK;MAAlB,CAAD,CAAR;MACA,MAAMC,MAAM,GAAG,MAAMP,aAAa,CAAE,kCAAF,EAAqC;QACrEQ,MAAM,EAAE,MAD6D;QAErEC,OAAO,EAAE;UACPC,MAAM,EAAE,kBADD;UAEP,gBAAgB,kBAFT,CAGP;;QAHO,CAF4D;QAOrEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,IAAI,EAAG,GAAEX,IAAI,CAACY,GAAI,EADC;UAEnBC,KAAK,EAAG,GAAEb,IAAI,CAACa,KAAM,EAFF;UAGnBC,QAAQ,EAAG,GAAEd,IAAI,CAACc,QAAS;QAHR,CAAf;MAP+D,CAArC,CAAlC;;MAaA,IAAIV,MAAM,CAACW,OAAX,EAAoB;QAClBC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;MACD;;MACDjB,QAAQ,CAAC;QACPC,IAAI,EAAEJ,SAAS,CAACqB,mBADT;QAEPC,OAAO,EAAEhB,MAAM,CAACiB;MAFT,CAAD,CAAR;IAID,CAtBD,CAsBE,OAAOC,KAAP,EAAc;MACdrB,QAAQ,CAAC;QACPC,IAAI,EAAEJ,SAAS,CAACyB,iBADT;QAEPD,KAAK,EAAEA,KAAK,CAACE;MAFN,CAAD,CAAR;IAID;EACF,CA7BD;AA8BD,CA/BM"},"metadata":{},"sourceType":"module"}