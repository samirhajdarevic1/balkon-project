{"ast":null,"code":"import { predmetiTypes } from './types';\nimport fetchInstance from '../utils/fetchInstance';\nexport const ucitajSvePredmete = () => async dispatch => {\n  try {\n    dispatch({\n      type: predmetiTypes.UCITAJ_PREDMETE_REQUEST\n    });\n    const result = await fetchInstance('http://localhost:3001/predmeti', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: predmetiTypes.UCITAJ_PREDMETE_SUCCESS,\n      payload: result.predmeti\n    });\n  } catch (error) {\n    dispatch({\n      type: predmetiTypes.UCITAJ_PREDMETE_ERROR,\n      error: error.message\n    });\n  }\n};\nexport const ucitajUcenikovePredmete = (idUcenik, idRazred) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: predmetiTypes.UCITAJ_UCENIKOVE_PREDMETE_REQUEST\n      });\n      const result = await fetchInstance(`http://localhost:3001/ucenici/${idUcenik}/${idRazred}/predmeti`);\n      dispatch({\n        type: predmetiTypes.UCITAJ_UCENIKOVE_PREDMETE_SUCCESS,\n        payload: result.ucenikoviPredmeti || []\n      });\n      return result.ucenikoviPredmeti;\n    } catch (error) {\n      dispatch({\n        type: predmetiTypes.UCITAJ_UCENIKOVE_PREDMETE_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const ucitajPredmet = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: predmetiTypes.UCITAJ_PREDMET_REQUEST\n      });\n      const result = await fetchInstance(`http://localhost:3001/predmeti/${id}`);\n      console.log(result.predmet);\n\n      if (!result.predmet) {\n        dispatch({\n          type: predmetiTypes.UCITAJ_PREDMET_SUCCESS,\n          payload: []\n        });\n      }\n\n      dispatch({\n        type: predmetiTypes.UCITAJ_PREDMET_SUCCESS,\n        payload: result.predmet\n      });\n    } catch (error) {\n      dispatch({\n        type: predmetiTypes.UCITAJ_PREDMET_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const obrisiPredmet = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: predmetiTypes.OBRISI_PREDMET_REQUEST\n      });\n      const result = await fetchInstance(`http://localhost:3001/predmeti/${id}`, {\n        method: 'DELETE'\n      });\n      dispatch({\n        type: predmetiTypes.OBRISI_PREDMET_SUCCESS,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: predmetiTypes.OBRISI_PREDMET_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const urediPredmet = predmet => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: predmetiTypes.UREDI_PREDMET_REQUEST\n      });\n      const result = await fetchInstance(`http://localhost:3001/predmeti/${predmet.idPredmet}`, {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          naziv: `${predmet.naziv}`\n        })\n      });\n      dispatch({\n        type: predmetiTypes.UREDI_PREDMET_SUCCESS,\n        payload: result.data\n      });\n    } catch (error) {\n      dispatch({\n        type: predmetiTypes.UREDI_PREDMET_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const dodajPredmet = predmet => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: predmetiTypes.DODAJ_PREDMET_REQUEST\n      });\n      const result = await fetchInstance(`http://localhost:3001/predmeti`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          naziv: `${predmet.naziv}`\n        })\n      });\n      dispatch({\n        type: predmetiTypes.DODAJ_PREDMET_SUCCESS,\n        payload: result.predmet\n      });\n    } catch (error) {\n      dispatch({\n        type: predmetiTypes.DODAJ_PREDMET_ERROR,\n        error: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["predmetiTypes","fetchInstance","ucitajSvePredmete","dispatch","type","UCITAJ_PREDMETE_REQUEST","result","method","headers","Accept","UCITAJ_PREDMETE_SUCCESS","payload","predmeti","error","UCITAJ_PREDMETE_ERROR","message","ucitajUcenikovePredmete","idUcenik","idRazred","UCITAJ_UCENIKOVE_PREDMETE_REQUEST","UCITAJ_UCENIKOVE_PREDMETE_SUCCESS","ucenikoviPredmeti","UCITAJ_UCENIKOVE_PREDMETE_ERROR","ucitajPredmet","id","UCITAJ_PREDMET_REQUEST","console","log","predmet","UCITAJ_PREDMET_SUCCESS","UCITAJ_PREDMET_ERROR","obrisiPredmet","OBRISI_PREDMET_REQUEST","OBRISI_PREDMET_SUCCESS","OBRISI_PREDMET_ERROR","urediPredmet","UREDI_PREDMET_REQUEST","idPredmet","body","JSON","stringify","naziv","UREDI_PREDMET_SUCCESS","data","UREDI_PREDMET_ERROR","dodajPredmet","DODAJ_PREDMET_REQUEST","DODAJ_PREDMET_SUCCESS","DODAJ_PREDMET_ERROR"],"sources":["C:/Users/pc/Desktop/balkon-project/client/src/redux/predmeti/actions.js"],"sourcesContent":["import { predmetiTypes } from './types';\r\nimport fetchInstance from '../utils/fetchInstance';\r\n\r\nexport const ucitajSvePredmete = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: predmetiTypes.UCITAJ_PREDMETE_REQUEST });\r\n    const result = await fetchInstance('http://localhost:3001/predmeti', {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    dispatch({\r\n      type: predmetiTypes.UCITAJ_PREDMETE_SUCCESS,\r\n      payload: result.predmeti,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: predmetiTypes.UCITAJ_PREDMETE_ERROR,\r\n      error: error.message,\r\n    });\r\n  }\r\n};\r\nexport const ucitajUcenikovePredmete = (idUcenik, idRazred) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: predmetiTypes.UCITAJ_UCENIKOVE_PREDMETE_REQUEST });\r\n      const result = await fetchInstance(\r\n        `http://localhost:3001/ucenici/${idUcenik}/${idRazred}/predmeti`\r\n      );\r\n      dispatch({\r\n        type: predmetiTypes.UCITAJ_UCENIKOVE_PREDMETE_SUCCESS,\r\n        payload: result.ucenikoviPredmeti || [],\r\n      });\r\n      return result.ucenikoviPredmeti;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: predmetiTypes.UCITAJ_UCENIKOVE_PREDMETE_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const ucitajPredmet = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: predmetiTypes.UCITAJ_PREDMET_REQUEST });\r\n      const result = await fetchInstance(\r\n        `http://localhost:3001/predmeti/${id}`\r\n      );\r\n      console.log(result.predmet);\r\n      if (!result.predmet) {\r\n        dispatch({\r\n          type: predmetiTypes.UCITAJ_PREDMET_SUCCESS,\r\n          payload: [],\r\n        });\r\n      }\r\n      dispatch({\r\n        type: predmetiTypes.UCITAJ_PREDMET_SUCCESS,\r\n        payload: result.predmet,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: predmetiTypes.UCITAJ_PREDMET_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const obrisiPredmet = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: predmetiTypes.OBRISI_PREDMET_REQUEST });\r\n      const result = await fetchInstance(\r\n        `http://localhost:3001/predmeti/${id}`,\r\n        {\r\n          method: 'DELETE',\r\n        }\r\n      );\r\n      dispatch({\r\n        type: predmetiTypes.OBRISI_PREDMET_SUCCESS,\r\n        payload: id,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: predmetiTypes.OBRISI_PREDMET_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const urediPredmet = (predmet) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: predmetiTypes.UREDI_PREDMET_REQUEST });\r\n      const result = await fetchInstance(\r\n        `http://localhost:3001/predmeti/${predmet.idPredmet}`,\r\n        {\r\n          method: 'PUT',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            naziv: `${predmet.naziv}`,\r\n          }),\r\n        }\r\n      );\r\n      dispatch({\r\n        type: predmetiTypes.UREDI_PREDMET_SUCCESS,\r\n        payload: result.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: predmetiTypes.UREDI_PREDMET_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const dodajPredmet = (predmet) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: predmetiTypes.DODAJ_PREDMET_REQUEST });\r\n      const result = await fetchInstance(`http://localhost:3001/predmeti`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          naziv: `${predmet.naziv}`,\r\n        }),\r\n      });\r\n      dispatch({\r\n        type: predmetiTypes.DODAJ_PREDMET_SUCCESS,\r\n        payload: result.predmet,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: predmetiTypes.DODAJ_PREDMET_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}