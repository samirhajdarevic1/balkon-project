{"ast":null,"code":"import { predmetiTypes } from './types';\nexport const ucitajSvePredmete = () => async dispatch => {\n  try {\n    dispatch({\n      type: predmetiTypes.UCITAJ_PREDMETE_REQUEST\n    });\n    const response = await fetch('http://localhost:3001/predmeti');\n    const result = await response.json();\n    dispatch({\n      type: predmetiTypes.UCITAJ_PREDMETE_SUCCESS,\n      payload: result.predmeti\n    });\n  } catch (error) {\n    dispatch({\n      type: predmetiTypes.UCITAJ_PREDMETE_ERROR,\n      error: error.message\n    });\n  }\n};\nexport const ucitajPredmet = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: predmetiTypes.UCITAJ_PREDMET_REQUEST\n      });\n      const response = await fetch(`http://localhost:3001/predmeti/${id}`);\n      const result = await response.json();\n      console.log(result.predmet);\n\n      if (!result.predmet) {\n        dispatch({\n          type: predmetiTypes.UCITAJ_PREDMET_SUCCESS,\n          payload: [] //payload: result.nastavnik,\n\n        });\n      }\n\n      dispatch({\n        type: predmetiTypes.UCITAJ_PREDMET_SUCCESS,\n        payload: result.predmet\n      });\n    } catch (error) {\n      dispatch({\n        type: predmetiTypes.UCITAJ_PREDMET_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const obrisiPredmet = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: predmetiTypes.OBRISI_PREDMET_REQUEST\n      });\n      const response = await fetch(`http://localhost:3001/predmeti/${id}`, {\n        method: 'DELETE'\n      });\n      await response.json();\n      dispatch({\n        type: predmetiTypes.OBRISI_PREDMET_SUCCESS,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: predmetiTypes.OBRISI_PREDMET_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const dodajPredmet = predmet => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: predmetiTypes.DODAJ_PREDMET_REQUEST\n      });\n      const response = await fetch(`http://localhost:3001/predmeti`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          naziv: `${predmet.naziv}`\n        })\n      });\n      const result = await response.json();\n      const sviPredmeti = await fetch('http://localhost:3001/predmeti');\n      dispatch({\n        type: predmetiTypes.DODAJ_PREDMET_SUCCESS,\n        payload: sviPredmeti\n      });\n    } catch (error) {\n      dispatch({\n        type: predmetiTypes.DODAJ_PREDMET_ERROR,\n        error: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["predmetiTypes","ucitajSvePredmete","dispatch","type","UCITAJ_PREDMETE_REQUEST","response","fetch","result","json","UCITAJ_PREDMETE_SUCCESS","payload","predmeti","error","UCITAJ_PREDMETE_ERROR","message","ucitajPredmet","id","UCITAJ_PREDMET_REQUEST","console","log","predmet","UCITAJ_PREDMET_SUCCESS","UCITAJ_PREDMET_ERROR","obrisiPredmet","OBRISI_PREDMET_REQUEST","method","OBRISI_PREDMET_SUCCESS","OBRISI_PREDMET_ERROR","dodajPredmet","DODAJ_PREDMET_REQUEST","headers","Accept","body","JSON","stringify","naziv","sviPredmeti","DODAJ_PREDMET_SUCCESS","DODAJ_PREDMET_ERROR"],"sources":["C:/Users/pc/Desktop/balkon-project/client/src/redux/predmeti/actions.js"],"sourcesContent":["import { predmetiTypes } from './types';\r\n\r\nexport const ucitajSvePredmete = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: predmetiTypes.UCITAJ_PREDMETE_REQUEST });\r\n    const response = await fetch('http://localhost:3001/predmeti');\r\n    const result = await response.json();\r\n    dispatch({\r\n      type: predmetiTypes.UCITAJ_PREDMETE_SUCCESS,\r\n      payload: result.predmeti,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: predmetiTypes.UCITAJ_PREDMETE_ERROR,\r\n      error: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const ucitajPredmet = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: predmetiTypes.UCITAJ_PREDMET_REQUEST });\r\n      const response = await fetch(`http://localhost:3001/predmeti/${id}`);\r\n      const result = await response.json();\r\n      console.log(result.predmet);\r\n      if (!result.predmet) {\r\n        dispatch({\r\n          type: predmetiTypes.UCITAJ_PREDMET_SUCCESS,\r\n          payload: [],\r\n          //payload: result.nastavnik,\r\n        });\r\n      }\r\n      dispatch({\r\n        type: predmetiTypes.UCITAJ_PREDMET_SUCCESS,\r\n        payload: result.predmet,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: predmetiTypes.UCITAJ_PREDMET_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const obrisiPredmet = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: predmetiTypes.OBRISI_PREDMET_REQUEST });\r\n      const response = await fetch(`http://localhost:3001/predmeti/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      await response.json();\r\n      dispatch({\r\n        type: predmetiTypes.OBRISI_PREDMET_SUCCESS,\r\n        payload: id,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: predmetiTypes.OBRISI_PREDMET_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const dodajPredmet = (predmet) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: predmetiTypes.DODAJ_PREDMET_REQUEST });\r\n      const response = await fetch(`http://localhost:3001/predmeti`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          naziv: `${predmet.naziv}`,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      const sviPredmeti = await fetch('http://localhost:3001/predmeti');\r\n      dispatch({\r\n        type: predmetiTypes.DODAJ_PREDMET_SUCCESS,\r\n        payload: sviPredmeti,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: predmetiTypes.DODAJ_PREDMET_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}