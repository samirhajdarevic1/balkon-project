{"ast":null,"code":"import { razrediTypes } from './types';\nexport const ucitajSveRazrede = () => async dispatch => {\n  try {\n    dispatch({\n      type: razrediTypes.UCITAJ_RAZREDE_REQUEST\n    });\n    const response = await fetch('http://localhost:3001/odjeljenja');\n    const result = await response.json();\n    dispatch({\n      type: razrediTypes.UCITAJ_RAZREDE_SUCCESS,\n      payload: result.odjeljenja\n    });\n  } catch (error) {\n    dispatch({\n      type: razrediTypes.UCITAJ_RAZREDE_ERROR,\n      error: error.message\n    });\n  }\n};\nexport const ucitajRazred = id => {\n  console.log(id);\n  return async dispatch => {\n    try {\n      dispatch({\n        type: razrediTypes.UCITAJ_RAZRED_REQUEST\n      });\n      const response = await fetch(`http://localhost:3001/odjeljenja/${id}`);\n      const result = await response.json();\n      dispatch({\n        type: razrediTypes.UCITAJ_RAZRED_SUCCESS,\n        payload: result.ucenik\n      });\n    } catch (error) {\n      dispatch({\n        type: razrediTypes.UCITAJ_RAZRED_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const dodajRazred = razred => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: razrediTypes.DODAJ_RAZRED_REQUEST\n      });\n      const response = await fetch(`http://localhost:3001/odjeljenja`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idSkolskaGodina: `${razred.idSkolskaGodina}`,\n          idNastavnikRazrednik: `${razred.idNastavnikRazrednik}`,\n          oznakaOdjeljenja: `${razred.oznakaOdjeljenja}`,\n          razred: `${razred.razred}`\n        })\n      });\n      const result = await response.json();\n      dispatch({\n        type: razrediTypes.DODAJ_RAZRED_SUCCESS,\n        payload: result.data\n      });\n    } catch (error) {\n      dispatch({\n        type: razrediTypes.DODAJ_RAZRED_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const urediRazred = razred => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: razrediTypes.UREDI_RAZRED_REQUEST\n      });\n      const response = await fetch(`http://localhost:3001/odjeljenja/${razred.idOdjeljenja}`, {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idSkolskaGodina: `${razred.idSkolskaGodina}`,\n          idNastavnikRazrednik: `${razred.idNastavnikRazrednik}`,\n          oznakaOdjeljenja: `${razred.oznakaOdjeljenja}`,\n          razred: `${razred.razred}`\n        })\n      });\n      const result = await response.json();\n      dispatch({\n        type: razrediTypes.UREDI_RAZRED_SUCCESS,\n        payload: result.data\n      });\n    } catch (error) {\n      dispatch({\n        type: razrediTypes.UREDI_RAZRED_ERROR,\n        error: error.message\n      });\n    }\n  };\n};\nexport const obrisiRazred = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: razrediTypes.OBRISI_RAZRED_REQUEST\n      });\n      const response = await fetch(`http://localhost:3001/odjeljenja/${id}`, {\n        method: 'DELETE'\n      });\n      await response.json();\n      dispatch({\n        type: razrediTypes.OBRISI_RAZRED_SUCCESS,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: razrediTypes.OBRISI_RAZRED_ERROR,\n        error: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["razrediTypes","ucitajSveRazrede","dispatch","type","UCITAJ_RAZREDE_REQUEST","response","fetch","result","json","UCITAJ_RAZREDE_SUCCESS","payload","odjeljenja","error","UCITAJ_RAZREDE_ERROR","message","ucitajRazred","id","console","log","UCITAJ_RAZRED_REQUEST","UCITAJ_RAZRED_SUCCESS","ucenik","UCITAJ_RAZRED_ERROR","dodajRazred","razred","DODAJ_RAZRED_REQUEST","method","headers","Accept","body","JSON","stringify","idSkolskaGodina","idNastavnikRazrednik","oznakaOdjeljenja","DODAJ_RAZRED_SUCCESS","data","DODAJ_RAZRED_ERROR","urediRazred","UREDI_RAZRED_REQUEST","idOdjeljenja","UREDI_RAZRED_SUCCESS","UREDI_RAZRED_ERROR","obrisiRazred","OBRISI_RAZRED_REQUEST","OBRISI_RAZRED_SUCCESS","OBRISI_RAZRED_ERROR"],"sources":["C:/Users/pc/Desktop/balkon-project/client/src/redux/odjeljenjaRazredi/actions.js"],"sourcesContent":["import { razrediTypes } from './types';\r\n\r\nexport const ucitajSveRazrede = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: razrediTypes.UCITAJ_RAZREDE_REQUEST });\r\n    const response = await fetch('http://localhost:3001/odjeljenja');\r\n    const result = await response.json();\r\n    dispatch({\r\n      type: razrediTypes.UCITAJ_RAZREDE_SUCCESS,\r\n      payload: result.odjeljenja,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: razrediTypes.UCITAJ_RAZREDE_ERROR,\r\n      error: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const ucitajRazred = (id) => {\r\n  console.log(id);\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: razrediTypes.UCITAJ_RAZRED_REQUEST });\r\n      const response = await fetch(`http://localhost:3001/odjeljenja/${id}`);\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: razrediTypes.UCITAJ_RAZRED_SUCCESS,\r\n        payload: result.ucenik,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: razrediTypes.UCITAJ_RAZRED_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const dodajRazred = (razred) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: razrediTypes.DODAJ_RAZRED_REQUEST });\r\n      const response = await fetch(`http://localhost:3001/odjeljenja`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          idSkolskaGodina: `${razred.idSkolskaGodina}`,\r\n          idNastavnikRazrednik: `${razred.idNastavnikRazrednik}`,\r\n          oznakaOdjeljenja: `${razred.oznakaOdjeljenja}`,\r\n          razred: `${razred.razred}`,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: razrediTypes.DODAJ_RAZRED_SUCCESS,\r\n        payload: result.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: razrediTypes.DODAJ_RAZRED_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const urediRazred = (razred) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: razrediTypes.UREDI_RAZRED_REQUEST });\r\n      const response = await fetch(\r\n        `http://localhost:3001/odjeljenja/${razred.idOdjeljenja}`,\r\n        {\r\n          method: 'PUT',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            idSkolskaGodina: `${razred.idSkolskaGodina}`,\r\n            idNastavnikRazrednik: `${razred.idNastavnikRazrednik}`,\r\n            oznakaOdjeljenja: `${razred.oznakaOdjeljenja}`,\r\n            razred: `${razred.razred}`,\r\n          }),\r\n        }\r\n      );\r\n      const result = await response.json();\r\n      dispatch({\r\n        type: razrediTypes.UREDI_RAZRED_SUCCESS,\r\n        payload: result.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: razrediTypes.UREDI_RAZRED_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const obrisiRazred = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: razrediTypes.OBRISI_RAZRED_REQUEST });\r\n      const response = await fetch(`http://localhost:3001/odjeljenja/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      await response.json();\r\n      dispatch({\r\n        type: razrediTypes.OBRISI_RAZRED_SUCCESS,\r\n        payload: id,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: razrediTypes.OBRISI_RAZRED_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}