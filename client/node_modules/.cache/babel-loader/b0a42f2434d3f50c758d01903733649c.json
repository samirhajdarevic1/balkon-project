{"ast":null,"code":"import { userTypes } from './types';\nexport const dodajUsera = user => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: userTypes.DODAJ_USERA_REQUEST\n      });\n      const response = await fetch('http://localhost:3001/createUser', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: `${user.name}`,\n          password: `${user.password}`\n        })\n      });\n      const result = response.json;\n      dispatch({\n        type: userTypes.DODAJ_USERA_SUCCESS,\n        payload: result\n      });\n    } catch (error) {\n      dispatch({\n        type: userTypes.DODAJ_USERA_ERROR,\n        error: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["userTypes","dodajUsera","user","dispatch","type","DODAJ_USERA_REQUEST","response","fetch","method","headers","Accept","body","JSON","stringify","name","password","result","json","DODAJ_USERA_SUCCESS","payload","error","DODAJ_USERA_ERROR","message"],"sources":["C:/Users/pc/Desktop/balkon-project/client/src/redux/users/actions.js"],"sourcesContent":["import { userTypes } from './types';\r\n\r\nexport const dodajUsera = (user) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: userTypes.DODAJ_USERA_REQUEST });\r\n      const response = await fetch('http://localhost:3001/createUser', {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name: `${user.name}`,\r\n          password: `${user.password}`,\r\n        }),\r\n      });\r\n      const result = response.json;\r\n\r\n      dispatch({\r\n        type: userTypes.DODAJ_USERA_SUCCESS,\r\n        payload: result,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: userTypes.DODAJ_USERA_ERROR,\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,SAA1B;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;EAClC,OAAO,MAAOC,QAAP,IAAoB;IACzB,IAAI;MACFA,QAAQ,CAAC;QAAEC,IAAI,EAAEJ,SAAS,CAACK;MAAlB,CAAD,CAAR;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;QAC/DC,MAAM,EAAE,MADuD;QAE/DC,OAAO,EAAE;UACPC,MAAM,EAAE,kBADD;UAEP,gBAAgB;QAFT,CAFsD;QAM/DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,IAAI,EAAG,GAAEZ,IAAI,CAACY,IAAK,EADA;UAEnBC,QAAQ,EAAG,GAAEb,IAAI,CAACa,QAAS;QAFR,CAAf;MANyD,CAArC,CAA5B;MAWA,MAAMC,MAAM,GAAGV,QAAQ,CAACW,IAAxB;MAEAd,QAAQ,CAAC;QACPC,IAAI,EAAEJ,SAAS,CAACkB,mBADT;QAEPC,OAAO,EAAEH;MAFF,CAAD,CAAR;IAID,CAnBD,CAmBE,OAAOI,KAAP,EAAc;MACdjB,QAAQ,CAAC;QACPC,IAAI,EAAEJ,SAAS,CAACqB,iBADT;QAEPD,KAAK,EAAEA,KAAK,CAACE;MAFN,CAAD,CAAR;IAID;EACF,CA1BD;AA2BD,CA5BM"},"metadata":{},"sourceType":"module"}